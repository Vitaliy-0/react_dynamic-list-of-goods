{"version":3,"sources":["api/goods.ts","components/GoodsList.tsx","components/LoadingError.tsx","App.tsx","index.tsx"],"names":["API_URL","getAll","fetch","then","response","json","get5First","getRedGoods","GoodsList","goods","className","map","good","style","backgroundColor","color","id","name","LoadingError","App","state","isLoading","isInitialized","hasLoadingError","loadAllGoods","a","setState","goodsAPI","load5FirstGoods","allGoods","slice","loadRedGoods","filter","this","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yTACMA,EAAO,wEAEN,SAASC,IACd,OAAOC,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOJ,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGlBE,EAAc,WACzB,OAAOL,MAAMF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,eCPlBG,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAIC,UAAU,cAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBACEF,UAAU,cAEVG,MAAO,CAAEC,gBAAiBF,EAAKG,OAHjC,mBAKMH,EAAKI,GALX,aAKkBJ,EAAKK,OAHhBL,EAAKI,UCXLE,EAAyB,kBACpC,qBAAKR,UAAU,kCAAf,mDCaWS,EAAb,4MACEC,MAAQ,CACNX,MAAO,GACPY,WAAW,EACXC,eAAe,EACfC,iBAAiB,GALrB,EAQEC,aARF,sBAQiB,4BAAAC,EAAA,6DACb,EAAKC,SAAS,CACZL,WAAW,EACXE,iBAAiB,IAHN,kBAOSI,IAPT,OAOLlB,EAPK,OASX,EAAKiB,SAAS,CACZjB,QACAY,WAAW,EACXC,eAAe,IAZN,gDAeX,EAAKI,SAAS,CACZL,WAAW,EACXE,iBAAiB,IAjBR,yDARjB,EA8BEK,gBA9BF,sBA8BoB,4BAAAH,EAAA,6DAChB,EAAKC,SAAS,CACZL,WAAW,EACXE,iBAAiB,IAHH,kBAOiBI,IAPjB,OAORE,EAPQ,OASd,EAAKH,SAAS,CACZjB,MAAOoB,EAASC,MAAM,EAAG,GACzBT,WAAW,EACXC,eAAe,IAZH,gDAed,EAAKI,SAAS,CACZL,WAAW,EACXE,iBAAiB,IAjBL,yDA9BpB,EAoDEQ,aApDF,sBAoDiB,4BAAAN,EAAA,6DACb,EAAKC,SAAS,CACZL,WAAW,EACXE,iBAAiB,IAHN,kBAOoBI,IAPpB,OAOLE,EAPK,OASX,EAAKH,SAAS,CACZjB,MAAOoB,EAASG,QACd,SAAApB,GAAI,MAAmB,QAAfA,EAAKG,SAEfM,WAAW,EACXC,eAAe,IAdN,gDAiBX,EAAKI,SAAS,CACZL,WAAW,EACXE,iBAAiB,IAnBR,yDApDjB,4CA4EE,WACE,MAKIU,KAAKb,MAJPX,EADF,EACEA,MACAY,EAFF,EAEEA,UACAC,EAHF,EAGEA,cACAC,EAJF,EAIEA,gBAGF,OACE,sBAAKb,UAAU,oBAAf,UACE,uDAEA,wBACEwB,KAAK,SACLxB,UAAWyB,IAAW,SAAU,UAAW,CACzC,aAAcd,IAEhBe,QAASH,KAAKT,aALhB,4BAUA,wBACEU,KAAK,SACLxB,UAAWyB,IAAW,SAAU,aAAc,CAC5C,aAAcd,IAEhBe,QAASH,KAAKL,gBALhB,gCASA,wBACEM,KAAK,SACLxB,UAAWyB,IAAW,SAAU,YAAa,CAC3C,aAAcd,IAEhBe,QAASH,KAAKF,aALhB,4BAUCT,GACC,cAAC,EAAD,CAAWb,MAAOA,IAGnBc,GACC,cAAC,EAAD,WA1HV,GAAyBc,IAAMC,WCb/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d7cf5304.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = (): Promise<Good[]> => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n\nexport const getRedGoods = (): Promise<Good[]> => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n","import React from 'react';\n\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"Goods__list\">\n    {goods.map(good => (\n      <li\n        className=\"Goods__item\"\n        key={good.id}\n        style={{ backgroundColor: good.color }}\n      >\n        {`${good.id}: ${good.name}`}\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\n\nexport const LoadingError: React.FC = () => (\n  <div className=\"notification is-danger is-light\">\n    An error occured when loading users!\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport 'bulma';\nimport classNames from 'classnames';\n\nimport * as goodsAPI from './api/goods';\nimport { GoodsList } from './components/GoodsList';\nimport { LoadingError } from './components/LoadingError';\n\ninterface State {\n  goods: Good[];\n  isLoading: boolean;\n  isInitialized: boolean;\n  hasLoadingError: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: [],\n    isLoading: false,\n    isInitialized: false,\n    hasLoadingError: false,\n  };\n\n  loadAllGoods = async () => {\n    this.setState({\n      isLoading: true,\n      hasLoadingError: false,\n    });\n\n    try {\n      const goods = await goodsAPI.getAll();\n\n      this.setState({\n        goods,\n        isLoading: false,\n        isInitialized: true,\n      });\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n        hasLoadingError: true,\n      });\n    }\n  };\n\n  load5FirstGoods = async () => {\n    this.setState({\n      isLoading: true,\n      hasLoadingError: false,\n    });\n\n    try {\n      const allGoods: Good[] = await goodsAPI.get5First();\n\n      this.setState({\n        goods: allGoods.slice(0, 5),\n        isLoading: false,\n        isInitialized: true,\n      });\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n        hasLoadingError: true,\n      });\n    }\n  };\n\n  loadRedGoods = async () => {\n    this.setState({\n      isLoading: true,\n      hasLoadingError: false,\n    });\n\n    try {\n      const allGoods: Good[] = await goodsAPI.getRedGoods();\n\n      this.setState({\n        goods: allGoods.filter(\n          good => good.color === 'red',\n        ),\n        isLoading: false,\n        isInitialized: true,\n      });\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n        hasLoadingError: true,\n      });\n    }\n  };\n\n  render() {\n    const {\n      goods,\n      isLoading,\n      isInitialized,\n      hasLoadingError,\n    } = this.state;\n\n    return (\n      <div className=\"content pl-5 pt-5\">\n        <h1>Dynamic list of Goods</h1>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-loading': isLoading,\n          })}\n          onClick={this.loadAllGoods}\n        >\n          Load all goods\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-primary', {\n            'is-loading': isLoading,\n          })}\n          onClick={this.load5FirstGoods}\n        >\n          Load 5 first goods\n        </button>\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-danger', {\n            'is-loading': isLoading,\n          })}\n          onClick={this.loadRedGoods}\n        >\n          Load red goods\n        </button>\n\n        {isInitialized && (\n          <GoodsList goods={goods} />\n        )}\n\n        {hasLoadingError && (\n          <LoadingError />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}